/* Auto-generated by genmsg_java.py for file /opt/ros/electric/stacks/common_msgs/geometry_msgs/msg/Twist.msg */

package ros.pkg.geometry_msgs.msg;

import java.nio.ByteBuffer;

public class Twist extends ros.communication.Message {

  public ros.pkg.geometry_msgs.msg.Vector3 linear = new ros.pkg.geometry_msgs.msg.Vector3();
  public ros.pkg.geometry_msgs.msg.Vector3 angular = new ros.pkg.geometry_msgs.msg.Vector3();

  public Twist() {
  }

  public static java.lang.String __s_getDataType() { return "geometry_msgs/Twist"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "9f195f881246fdfa2798d1d3eebca84a"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# This expresses velocity in free space broken into it's linear and angular parts. \n" +
"Vector3  linear\n" +
"Vector3  angular\n" +
"\n" +
"================================================================================\n" +
"MSG: geometry_msgs/Vector3\n" +
"# This represents a vector in free space. \n" +
"\n" +
"float64 x\n" +
"float64 y\n" +
"float64 z\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public Twist clone() {
    Twist c = new Twist();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += linear.serializationLength();
    __l += angular.serializationLength();
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    linear.serialize(bb, seq);
    angular.serialize(bb, seq);
  }

  public void deserialize(ByteBuffer bb) {
    linear.deserialize(bb);
    angular.deserialize(bb);
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof Twist))
      return false;
    Twist other = (Twist) o;
    return
      linear.equals(other.linear) &&
      angular.equals(other.angular) &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.linear == null ? 0 : this.linear.hashCode());
    result = prime * result + (this.angular == null ? 0 : this.angular.hashCode());
    return result;
  }
} // class Twist

